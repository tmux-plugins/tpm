#!/usr/bin/env expect

# disables script output
log_user 0

spawn tmux

# Waiting for tmux to attach. If this is not done, next command, `send` will
# not work properly.
sleep 1

# this is tmux prefix + U
send "U"

set timeout 15

expect {
    "Installed plugins" {
expect {
    "\"tmux-example-plugin\"" {
expect {
    "\"tmux-online-status\"" {
expect {
    "\"tmux-battery\"" {
expect {
    "\"tmux-sidebar\"" {
expect {
    "\"tmux-sensible\"" {
expect {
    "\"sha1sum.txt\"" {
expect {
    "\"meta-micro\"" {
expect {
    "\"readme.txt\"" {
expect {
    "\"run-tests-within-vm\"" {
expect {
    "\"all\" - updates all plugins" {
    expect { "ENTER - cancels" }
          }}}}}}}}}}}}}}}}}}}}}

  timeout {
    puts "Plugin update prompt timeout";
    exit 1
  }
}

send "all\r"

expect {
    "Updating all plugins!" {
expect {
    "Updating \"tmux-example-plugin\"" {
expect {
    "\"tmux-example-plugin\" update success" {
expect {
    "Updating \"tmux-online-status\"" {
expect {
    "\"tmux-online-status\" update success" {
expect {
    "Updating \"tmux-battery\"" {
expect {
    "\"tmux-battery\" update success" {
expect {
    "Updating \"tmux-sidebar\"" {
expect {
    "\"tmux-sidebar\" update success" {
expect {
    "Updating \"sha1sum.txt\"" {
expect {
    "\"sha1sum.txt\" update success" {
expect {
    "Updating \"meta-micro\"" {
expect {
    "\"meta-micro\" update success" {
expect {
    "Updating \"readme.txt\"" {
expect {
    "\"readme.txt\" update success" {
expect {
    "Updating \"run-tests-within-vm\"" {
expect {
    "\"run-tests-within-vm\" update success" {
    expect { "Done, press ENTER to continue." { exit 0 } }
          }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}

  timeout {
    puts "Update all plugins timeout";
    exit 1
  }
}
